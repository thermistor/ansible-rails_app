server {

{% if rails_app_enable_https %}
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ rails_app_site }} {{ rails_app_site_aliases|join(' ') }};

  # based on https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html and
  # also https://wiki.mozilla.org/Security/Server_Side_TLS
  # generated 2020-05-21, Mozilla Guideline v5.4, nginx 1.17.7, OpenSSL 1.1.1d, intermediate configuration
  # https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1d&guideline=5.4
  ssl_certificate      {{ rails_app_ssl_cert }};
  ssl_certificate_key  {{ rails_app_ssl_cert_key }};
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;

  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  {% if not rails_app_force_ssl_enabled %}
  # HSTS (ngx_http_headers_module is required) (63072000 seconds)
  add_header Strict-Transport-Security "max-age=63072000" always;
  {% endif %}

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  # verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate {{ rails_app_ssl_cert_ca }};

  resolver 1.1.1.1 1.0.0.1 valid=300s;
  resolver_timeout 5s;

  {% if not rails_app_load_balanced %}
  if ( $host != '{{ rails_app_site }}' ) {
    rewrite ^ https://{{ rails_app_site }}$request_uri? permanent;
  }
  {% endif %}
{% else %}
  listen 80;
  listen [::]:80;

  # site aliases are handled by vhost_redirect for port 80
  server_name {{ rails_app_site }};
{% endif %}

  # enable APM monitoring tools to report the current queue time
  proxy_set_header X-Request-Start "t=${msec}";

  # TODO: figure out what is setting these already
  # add_header X-Frame-Options DENY;
  # add_header X-Content-Type-Options nosniff;
  more_clear_headers 'Server';
  more_clear_headers 'X-Powered-By';

  # solves http://stackoverflow.com/questions/17524396/400-bad-request-request-header-or-cookie-too-large
  large_client_header_buffers 4 16k;
  # allow for uploads of up to {{ rails_app_client_max_body_size }}
  client_max_body_size {{ rails_app_client_max_body_size }};

  root {{ rails_app_dir }}/public;
  passenger_enabled on;
  passenger_app_env {{ rails_app_env }};
  passenger_preload_bundler on;

  {{ rails_app_vhost_custom|indent(2) }}

  # allow .well-known discovery to work
  location ~ /\.well-known {
    allow all;
    break;
  }

{% if rails_app_vhost_lbhealth_endpoint %}
  # load balancer health check
  location /lbhealth {
    access_log off;

    return 200 "ok\n";
    add_header Content-Type text/plain;
    break;
  }
{% endif %}

  location / {
    if (-f $document_root/maintenance.html) {
      return 503;
    }
  }
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }

  location ~ ^/(assets|packs|uploads)/ {
    gzip_static on;
    brotli_static on;
    expires 1y;
    add_header Cache-Control public;
    {% if rails_app_vhost_acao_header %}add_header Access-Control-Allow-Origin {{ rails_app_vhost_acao_header }};{% endif %}

    add_header ETag "";
    access_log off;
    break;
  }

  location ~ ^/(favicon|apple-touch|mstile).*\.(ico|png)$ {
    expires    1y;
    add_header Cache-Control public;

    add_header ETag "";
    access_log off;
    break;
  }

  access_log /var/log/nginx/{{ rails_app_shortname }}-access.log;
  error_log  /var/log/nginx/{{ rails_app_shortname }}-error.log;

}
