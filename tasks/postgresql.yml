---

- name: Add python3-psycopg2 package to be able to setup postgresql_user
  ansible.builtin.apt:
    name: python3-psycopg2
    state: present

- name: Setup postgresql user for the rails app {{ rails_app_shortname }}
  community.postgresql.postgresql_user:
    name: "{{ rails_app_db_user }}"
    password: "{{ rails_app_db_encrypted_password }}"
    role_attr_flags: CREATEDB,NOSUPERUSER
  become: true
  become_user: postgres
  when: rails_app_db_provision

- name: Create database for app
  community.postgresql.postgresql_db:
    name: "{{ rails_app_db_name }}"
    owner: "{{ rails_app_db_user }}"
  become: true
  become_user: postgres
  when: rails_app_db_provision

- name: Install required extensions as local postgres user
  community.postgresql.postgresql_ext:
    name: "{{ item }}"
    db: "{{ rails_app_db_name }}"
  become: true
  become_user: postgres
  with_items: "{{ rails_app_pg_extensions }}"
  when: rails_app_db_provision

- name: Install required extensions with remote connection params
  community.postgresql.postgresql_ext:
    name: "{{ item }}"
    login_user: "{{ rails_app_db_user }}"
    login_host: "{{ rails_app_db_host }}"
    login_password: "{{ rails_app_db_password }}"
    db: "{{ rails_app_db_name }}"
  with_items: "{{ rails_app_pg_extensions }}"
  when: not rails_app_db_provision

- name: Write the database.yml
  ansible.builtin.template:
    src: database.postgresql.yml.j2
    dest: "{{ rails_app_dir }}/config/database.yml"
    owner: "{{ rails_app_user }}"
    group: "{{ rails_app_user }}"
    mode: '0440'
  tags:
    - security

- name: Setup the .pgpass file for rails_app_db_user
  ansible.builtin.template:
    src: pgpass.j2
    dest: /home/{{ rails_app_user }}/.pgpass
    owner: "{{ rails_app_user }}"
    group: "{{ rails_app_user }}"
    mode: '0600'
  tags:
    - security

- name: If using unix sockets ensure app user can connect through pgbouncer to a unix socket
  ansible.builtin.lineinfile:
    dest: /etc/postgresql/{{ rails_app_postgresql_version }}/main/pg_hba.conf
    line: 'local   {{ rails_app_db_name }}       {{ rails_app_db_user }}                                     trust'
    insertafter: '# "local" is for Unix domain socket connections only'
  when: rails_app_db_enable_pgbouncer and rails_app_db_socket
  notify:
    - Restart postgres
